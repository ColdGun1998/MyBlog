(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{363:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git基本操作"}},[t._v("#")]),t._v(" Git基本操作")]),t._v(" "),a("p",[t._v("Git 常用的是以下 6 个命令："),a("strong",[t._v("git clone")]),t._v("、"),a("strong",[t._v("git push")]),t._v("、"),a("strong",[t._v("git add")]),t._v(" 、"),a("strong",[t._v("git commit")]),t._v("、"),a("strong",[t._v("git checkout")]),t._v("、"),a("strong",[t._v("git pull")]),t._v("，后面我们会详细介绍。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"创建版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git init 将当前的空目录初始化为Git可以管理的仓库\ngit add [fileName] 添加一个或多个文件到暂存区\ngit commit -m "提交说明" 将暂存区内容添加到本地仓库中\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("其他")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add -A  提交所有变化\ngit log 显示从最近到最远的提交日志\ngit reset [--soft | --mixed | --hard] [HEAD] 用于回退版本，可以指定退回某一次提交的版本\ngit reset HEAD^            # 回退所有内容到上一个版本  \ngit reset HEAD^ hello.php  # 回退 hello.php 文件的版本到上一个版本  \ngit  reset  052e           # 回退到指定版本\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"创建与合并分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建与合并分支"}},[t._v("#")]),t._v(" 创建与合并分支")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout -b dev 创建dev分支，然后切换到dev分支，等同于以下两条命令\ngit branch dev\ngit checkout dev\ngit merge dev 用于合并指定分支到当前分支\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add [shortname] [url] 添加一个新的远程仓库，并指定一个简单的名字\ngit remote add origin git@github.com:ColdGun1998/MyBlog.git\ngit push origin masterlocal:masterOrigin 将本地的 masterlocal 分支推送到 origin 主机的 masterOrigin 分支\ngit push origin master 和上一条命令等同，如果本地分支名与远程分支名相同，则可以省略冒号\ngit push --force origin master 如果本地版本与远程版本有差异，但又要强制推送可以使用 --force 参数：\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);